<!DOCTYPE html>
<html>
    <head>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=UA-54470483-5"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());

            gtag('config', 'UA-54470483-5');
        </script>

        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        @{
            string title = Model.GetString("Title");
            title = $"Discover .NET{(string.IsNullOrWhiteSpace(title) ? "" : " - " + title)}";
            string description = Model.GetString("Description");
            description = string.IsNullOrWhiteSpace(description)
                ? "Awesome .NET open source & community resources" : description;
            string image = Model.GetString("Image");
            image = string.IsNullOrWhiteSpace(image)
                ? "https://discoverdot.net/assets/d.png" : image;
        }
        <title>@title</title>
        <meta name="description" content="@description">
        <meta property="og:title" content="@title">
        <meta property="og:description" content="@description">
        <meta property="og:image" content="@image">
        <meta property="og:url" content="@(Context.GetLink(Document, true))">
        <meta name="twitter:title" content="@title">
        <meta name="twitter:description" content="@description">
        <meta name="twitter:image" content="@image">
        <meta name="twitter:card" content="summary_large_image">

        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
        <link rel="manifest" href="/site.webmanifest">
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#6f42c1">
        <meta name="msapplication-TileColor" content="#6f42c1">
        <meta name="theme-color" content="#ffffff">
        
        <link href="/bootstrap/bootstrap.css" rel="stylesheet"/>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-vue@2.0.0-rc.11/dist/bootstrap-vue.css" rel="stylesheet"/>
        <link href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.12.0/build/styles/default.min.css" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Nothing+You+Could+Do|Roboto+Mono:400,700|Roboto+Slab:100,700|Roboto:300,400,700" rel="stylesheet" data-no-mirror>
        <link href="/assets/styles.css" rel="stylesheet"/>  

        <script src="https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.auto.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/babel-polyfill@6.26.0/dist/polyfill.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap-vue@2.0.0-rc.11/dist/bootstrap-vue.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/http-vue-loader@1.3.5"></script>
        <script src="https://cdn.jsdelivr.net/npm/axios@0.18.0/dist/axios.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/moment@2.20.1/moment.min.js"></script>
        <script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.12.0/build/highlight.min.js"></script>
        <script src="https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>
        <script defer src="https://use.fontawesome.com/releases/v5.0.10/js/all.js"></script>

        @RenderSection("Head", false)

        <script>
            hljs.initHighlightingOnLoad();
        </script>
    </head>
    <body>
        <div id="app" class="d-flex flex-column flex-nowrap h-100">
            <header class="mb-4">
                <div class="logo-header text-center">
                    <div class="logo container-fluid layout-container">
                        <a href="/"><img src="/assets/logo.svg"></img></a>
                        <p class="d-none d-sm-block">Awesome .NET open source & community resources</p>
                    </div>   
                </div>
                <b-navbar toggleable="md" type="dark" variant="dark" class="font-weight-bold">
                    <b-container fluid class="layout-container">
                        <div class="flex-grow-1">
                            <b-navbar-toggle target="main-nav-collapse"></b-navbar-toggle>
                            <b-collapse is-nav id="main-nav-collapse">
                                <b-navbar-nav class="float-md-left">
                                    <b-nav-item href="/">Home</b-nav-item>
                                    <b-nav-item href="/projects">Projects</b-nav-item>
                                    <b-nav-item href="/issues">Issues</b-nav-item>
                                    <b-nav-item href="/blogs">Blogs</b-nav-item>
                                    <b-nav-item href="/broadcasts">Broadcasts</b-nav-item>
                                    <b-nav-item href="/resources">Resources</b-nav-item>
                                </b-navbar-nav>     
                            </b-collapse>  
                        </div>                
                        <b-navbar-nav class="align-self-start">
                            <search-box :project-keys="projectKeys"></search-box>
                        </b-navbar-nav>   
                    </b-container>
                </b-navbar>
            </header>
            <main>
                <b-container fluid id="main" class="layout-container">
                    @RenderBody()
                </b-container>
            </main>
            <footer class="bg-dark text-center text-muted py-3 mt-5">
                <b-container fluid class="layout-container">
                    <div class="mb-2">
                        <a href="/get-involved" class="text-light mr-2">Get Involved</a>
                        <a href="/suggest" class="text-light mr-2">Suggest Content</a>
                        <a href="/api" class="text-light">API</a>
                    </div>
                    <div class="mb-2 text-light">
                        <a href="/feeds" class="text-light mr-2"><i class="fas fa-rss"></i></a>
                        <a href="https://github.com/daveaglick/discoverdotnet" class="text-light mr-2"><i class="fab fa-github"></i></a>
                        <a href="https://twitter.com/discover_dotnet" class="text-light"><i class="fab fa-twitter"></i></a>
                    </div>
                    <div class="small">Data updated about every two hours</div>
                    <div class="small"><i class="fas fa-heart"></i> Generated by <a href="https://wyam.io" class="text-light">Wyam</a> on <a href="https://appveyor.com" class="text-light">AppVeyor</a>, hosted at <a href="https://netlify.com" class="text-light">Netlify</a>, search by <a href="https://algolia.com" class="text-light">Algolia</a></div>
                    <div class="mt-2"><a href="https://www.buymeacoffee.com/daveaglick" target="_blank"><img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: auto !important;width: auto !important;" ></a></div>
                </b-container>
            </footer>
        </div>

        @RenderSection("Script", false)

        <script type="text/javascript">
            Vue.config.debug = true; 
            Vue.config.devtools = true

            // @Document.Source.Directory.FullPath
            // Load all .vue single-file components in either the "portal/components" folder (for shared components) or at the current level
            @{
                DirectoryPath inputDirectory = Context.FileSystem.GetRootDirectory().Path.Combine("input");
                string componentsPath = inputDirectory.Combine(Context.FileSystem.GetInputDirectory("components").Path).FullPath;
                foreach(IDocument vueDocument in Outputs[nameof(SiteResources)]
                    .Where(x => string.Equals(x.Source.Extension, ".vue", StringComparison.OrdinalIgnoreCase)
                        && (x.Destination.Directory.FullPath.Equals(Document.Destination.Directory.FullPath, StringComparison.OrdinalIgnoreCase)
                            || x.Source.Directory.FullPath.StartsWith(componentsPath, StringComparison.OrdinalIgnoreCase))))
                {
                    <text>
                        Vue.component('@vueDocument.Source.FileNameWithoutExtension', httpVueLoader('@inputDirectory.Combine(Document.Destination.Directory).GetRelativePath(vueDocument.Source)'));
                    </text>
                }
            } 

            Vue.filter('no-protocol', function (value) {
                if (!value)
                {
                    return '';
                }
                return value.replace(/^\/\/|^.*?:(\/\/)?/, '');
            });

            Vue.filter('from-now', function (value) {
                if (!value)
                {
                    return '';
                }
                return moment(value).fromNow();
            });

            Vue.mixin({
                methods: {
                    getCard: function(cardData) {
                        var link = String(cardData.link);
                        if(link) {
                            if(link.startsWith('/projects')) {
                                return 'project-card';
                            }
                            if(link.startsWith('/blogs')) {
                                return 'blog-card';
                            }
                            if(link.startsWith('/broadcasts')) {
                                return 'broadcast-card';
                            }
                        }
                        var cardType = cardData.cardType;
                        if(cardType) {
                            if(cardType === "Resource") {
                                return 'resource-card';
                            }
                        }
                        return 'card';
                    }
                }
            });

            new Vue({
                el: '#app',
                data: {
                    projectKeys: []
                },
                created: function() {        
                    var self = this;      
                    axios
                        .get('/data/project-keys.json')
                        .then(function(response) {
                            self.projectKeys = response.data
                        })
                        .catch(function(e) {
                            console.log(e);
                        });
                }
            });
        </script>
    </body>
</html>